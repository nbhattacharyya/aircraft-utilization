import { Command as $Command } from "@smithy/smithy-client";
import {
  BlobPayloadInputTypes,
  MetadataBearer as __MetadataBearer,
} from "@smithy/types";
import { Uint8ArrayBlobAdapter } from "@smithy/util-stream";
import {
  IoTDataPlaneClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../IoTDataPlaneClient";
import {
  UpdateThingShadowRequest,
  UpdateThingShadowResponse,
} from "../models/models_0";
export { __MetadataBearer };
export { $Command };
export type UpdateThingShadowCommandInputType = Pick<
  UpdateThingShadowRequest,
  Exclude<keyof UpdateThingShadowRequest, "payload">
> & {
  payload: BlobPayloadInputTypes;
};
export interface UpdateThingShadowCommandInput
  extends UpdateThingShadowCommandInputType {}
export type UpdateThingShadowCommandOutputType = Pick<
  UpdateThingShadowResponse,
  Exclude<keyof UpdateThingShadowResponse, "payload">
> & {
  payload?: Uint8ArrayBlobAdapter;
};
export interface UpdateThingShadowCommandOutput
  extends UpdateThingShadowCommandOutputType,
    __MetadataBearer {}
declare const UpdateThingShadowCommand_base: {
  new (
    input: UpdateThingShadowCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    UpdateThingShadowCommandInput,
    UpdateThingShadowCommandOutput,
    IoTDataPlaneClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  new (
    input: UpdateThingShadowCommandInput
  ): import("@smithy/smithy-client").CommandImpl<
    UpdateThingShadowCommandInput,
    UpdateThingShadowCommandOutput,
    IoTDataPlaneClientResolvedConfig,
    ServiceInputTypes,
    ServiceOutputTypes
  >;
  getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
export declare class UpdateThingShadowCommand extends UpdateThingShadowCommand_base {
  protected static __types: {
    api: {
      input: UpdateThingShadowRequest;
      output: UpdateThingShadowResponse;
    };
    sdk: {
      input: UpdateThingShadowCommandInput;
      output: UpdateThingShadowCommandOutput;
    };
  };
}
